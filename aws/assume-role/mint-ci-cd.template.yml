- key: aws--assume-role--install-cli
  call: aws/install-cli 1.0.2

- key: aws--assume-role--test--defaults
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_ASSUME }}

- key: aws--assume-role--test--defaults--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--defaults]
  run: aws sts get-caller-identity &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

- key: aws--assume-role--test--defaults--skip-auth--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--defaults]
  run: |
    if ! (aws sts get-caller-identity &> /dev/null); then
      echo "Not authenticated with AWS."
      exit 0
    fi
    echo "Authenticated with AWS."
    exit 1
  env:
    AWS_SKIP_AUTH: true

- key: aws--assume-role--test--parallel-group
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_ASSUME }}
- key: aws--assume-role--test--parallel-group--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--parallel-group]
  parallel: 2
  run: |
    aws sts get-caller-identity &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

- key: aws--assume-role--test--custom-profile
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_ASSUME }}
    profile-name: custom
    oidc-token-env-var: AWS_OIDC_TOKEN_2
- key: aws--assume-role--test--multiple-profiles--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--defaults, aws--assume-role--test--custom-profile]
  run:
    - aws sts get-caller-identity &> /dev/null # avoid leaking account/role info
    - aws sts get-caller-identity --profile custom &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}
    AWS_OIDC_TOKEN_2: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

- key: aws--assume-role--test--defaults--role-chain
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_CHAIN_ASSUME }}
    role-chaining: true
- key: aws--assume-role--test--defaults--role-chain--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--defaults, aws--assume-role--test--defaults--role-chain]
  run: aws sts get-caller-identity &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

- key: aws--assume-role--test--specified-profile-name
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_ASSUME }}
    profile-name: my-profile
- key: aws--assume-role--test--specified-profile-name--assert
  use: [aws--assume-role--install-cli, aws--assume-role--test--specified-profile-name]
  run: aws sts get-caller-identity --profile my-profile &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

- key: aws--assume-role--test--specified-profile-name--role-chain
  call: $LEAF_DIGEST
  with:
    region: us-east-2
    role-to-assume: ${{ vaults.mint_leaves_aws_assume_role_testing.secrets.ROLE_TO_CHAIN_ASSUME }}
    source-profile-name: my-profile
    profile-name: my-other-profile
    role-chaining: true
- key: aws--assume-role--test--specified-profile-name--role-chain--assert
  use:
    [
      aws--assume-role--install-cli,
      aws--assume-role--test--specified-profile-name,
      aws--assume-role--test--specified-profile-name--role-chain,
    ]
  run: aws sts get-caller-identity --profile my-other-profile &> /dev/null # avoid leaking account/role info
  env:
    AWS_OIDC_TOKEN: ${{ vaults.mint_leaves_aws_assume_role_testing.oidc.aws_token }}

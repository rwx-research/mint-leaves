name: mint/build-leaf
version: 0.0.1

parameters:
  dir:
    description: 'Directory containing leaf contents'
    required: true
  rwx-access-token:
    description: 'rwx access token with permissions to build a leaf'
    required: true

tasks:
  - key: system
    use: []
    run: |
      ran_update=0
      if ! which zip; then
        set +e
        sudo apt-get install zip
        apt_exit=$?
        set -e
        if [[ $apt_exit -eq 100 ]]; then
          ran_update=1
          sudo apt-get update
          sudo apt-get install zip
        fi
      fi

      if ! which jq; then
        set +e
        sudo apt-get install jq
        apt_exit=$?
        set -e
        if [[ $apt_exit -eq 100 ]]; then
        ran_update=1
          sudo apt-get update
          sudo apt-get install zip
        fi
      fi

      if [[ $ran_update -eq 1 ]]; then
        sudo apt-get clean
      fi
  - key: build
    use: system
    run: |
      latest_timestamp=$(git ls-files -z ${{ params.dir }} | xargs -0 -n1 -I{} -- git log -1 --date=format:"%Y%m%d%H%M" --format="%ad" {} | sort | tail -n 1)
      if [[ -z "$latest_timestamp" ]]; then
        echo failed to determine timestamp
        exit 1
      fi
      find ${{ params.dir }} -exec touch -t "$latest_timestamp" {} \;
      leaf_name=$(grep '^name:' ${{ params.dir }}/mint-leaf.yml | awk '{print $2}' | cut -d '/' -f1)
      leaf_file=/var/mint-workspace/$leaf_name.zip
      echo -n $leaf_file > $MINT_VALUES/leaf-file
      cd ${{ params.dir }} && zip -X -r $leaf_file .
    outputs:
      values:
        - leaf-file
  - key: upload
    use: build
    run: |
      echo "leaf-file is ${{ tasks.build.values.leaf-file }}"
      curl \
        --request POST \
        --fail-with-body \
        --header "Authorization: Bearer $RWX_ACCESS_TOKEN" \
        --header 'Accept: application/json' \
        -F 'file=@${{ tasks.build.values.leaf-file }}' \
        https://cloud.rwx.com/mint/api/leaves | tee leaves-result.json

        BUILT_LEAF_DIGEST=$(cat leaves-result.json | jq -r '.digest')
        echo "BUILT_LEAF_DIGEST=$BUILT_LEAF_DIGEST" >> $MINT_ENV
        echo -n "$BUILT_LEAF_DIGEST" > $MINT_VALUES/leaf-digest
    env:
      RWX_ACCESS_TOKEN: ${{ params.rwx-access-token }}
    outputs:
      values:
        - leaf-digest
  - key: generate-tests
    after: upload
    run: |
      export LEAF_DIGEST="${{ tasks.upload.values.leaf-digest }}"
      if [[ -z "$LEAF_DIGEST" ]]; then
        echo expected LEAF_DIGEST to be set
        exit 1
      fi

      envsubst '$LEAF_DIGEST' < ${{ params.dir }}/mint-tests.template.yml | tee $MINT_DYNAMIC_TASKS/leaf-tests.yml

      export LEAF_TEST_TASKS=$(grep ' key: ' $MINT_DYNAMIC_TASKS/leaf-tests.yml | awk '{print $3}' | paste -s -d ',' -)

      envsubst '$LEAF_DIGEST,$LEAF_TEST_TASKS' < $MINT_LEAF_PATH/publish-task.template.yml | tee -a $MINT_DYNAMIC_TASKS/leaf-tests.yml
    env:
      RWX_ACCESS_TOKEN: ${{ params.rwx-access-token }}

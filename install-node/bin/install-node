#!/usr/bin/env bash
set -ueo pipefail

if [ "$NODE_VERSION" = "" ]; then
  if [ "$NODE_VERSION_FILE" = "" ]; then
    echo >&2 "NODE_VERSION or NODE_VERSION_FILE must be set."
    exit 2
  fi

  NODE_VERSION="$(cat "$NODE_VERSION_FILE")"
fi

if [ "$NODE_VERSION" = "" ]; then
  echo >&2 "NODE_VERSION was not found."
  exit 2
fi

### Prepare gpg and tar dependencies

sudo apt-get install -y gnupg xz-utils

declare -a keyservers=(
  "hkps://keyserver.ubuntu.com"
  "hkps://keys.openpgp.org"
)
found=false

# Add known signing keys. See https://github.com/nodejs/node#release-keys
for server in "${keyservers[@]}"; do
  gpg --keyserver "${server}" --recv-keys \
    4ED778F539E3634C779C87C6D7062848A1AB005C \
    141F07595B7B3FFE74309A937405533BE57C7D57 \
    74F12602B6F1C4E913FAA37AD3A89613643B6201 \
    DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 \
    8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
    C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
    890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
    C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
    108F52B48DB57BB0CC439B2997B01419BD92F80A && found=true && break
done

if [[ "${found}" = "false" ]]; then
  echo >&2 "GPG signing keys were not successfully installed"
  exit 2
fi

### Install node

os="$(uname | tr '[:upper:]' '[:lower:]')"
architecture=""
case $(uname -m) in
x86_64) architecture="x64" ;;
arm | aarch64)
  case $os in
  darwin) architecture="arm64" ;;
  linux) dpkg --print-architecture | grep -q "arm64" && architecture="arm64" || architecture="arm7l" ;;
  *)
    echo "Unsupported OS: $os"
    exit 1
    ;;
  esac
  ;;
*)
  echo "Unsupported architecture: $(uname -m)"
  exit 1
  ;;
esac

echo "Detected ${os} OS on ${architecture} architecture"

nodejs_dir="${MINT_LEAF_PATH}/nodejs"
install_dir="${nodejs_dir}/v${NODE_VERSION}"
source_dir="${nodejs_dir}/src"
source_file="node-v${NODE_VERSION}-${os}-${architecture}.tar.xz"
download_url="https://nodejs.org/dist/v${NODE_VERSION}/${source_file}"
shasums_url="https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc"

function cleanup {
  # TODO(doug): mintignore these instead of removing
  echo "Cleaning up"
  sudo apt-get clean
  rm -rf "$source_dir" SHASUMS256.txt.asc
}
trap cleanup EXIT

echo "Creating ${source_dir} and ${install_dir}"
mkdir -p "$install_dir" "$source_dir"
cd "$source_dir"

echo "Fetching and verifying SHASUMS256.txt.asc"
rm -f SHASUMS256.txt.asc
curl -o SHASUMS256.txt.asc "$shasums_url"
cat SHASUMS256.txt.asc
gpg --verify SHASUMS256.txt.asc

gpgconf --kill dirmngr
gpgconf --kill gpg-agent

echo "Fetching and verifying source file"
curl -O "$download_url"
grep "$source_file" SHASUMS256.txt.asc | sha256sum -c -

echo "Extract source file to install directory $install_dir"
tar -C "$install_dir" --strip-components=1 -xJf "$source_file"

echo "Add nodejs ${NODE_VERSION} to PATH"
echo "${install_dir}/bin" >>"$MINT_ENV_DIR/PATH"

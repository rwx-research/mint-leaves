#!/usr/bin/env bash
set -ueo pipefail

if [ "$NODE_VERSION" = "" ]; then
  if [ "$NODE_VERSION_FILE" = "" ]; then
    cat << EOF > "$(mktemp "$MINT_ERRORS/error-XXXX")"
Invalid parameters: \`node-version\` or \`node-version-file\` must be set.
EOF
    exit 2
  fi

  NODE_VERSION="$(cat "$NODE_VERSION_FILE")"
fi

if [ "$NODE_VERSION" = "" ]; then
  echo >&2 "NODE_VERSION was not found."
  exit 2
fi

if ! [[ "$NODE_VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
    cat << EOF > "$(mktemp "$MINT_ERRORS/error-XXXX")"
Invalid node version.

Expected value matching \`[0-9]+\.[0-9]+\.[0-9]+\`

Received \`$NODE_VERSION\`
EOF
    exit 2
fi

### Prepare gpg and tar dependencies

sudo apt-get update
sudo apt-get install gnupg xz-utils
sudo apt-get clean

# Add known signing keys. See https://github.com/nodejs/node#release-keys
for key in \
  C0D6248439F1D5604AAFFB4021D900FFDB233756 \
  4ED778F539E3634C779C87C6D7062848A1AB005C \
  141F07595B7B3FFE74309A937405533BE57C7D57 \
  74F12602B6F1C4E913FAA37AD3A89613643B6201 \
  DD792F5973C6DE52C432CBDAC77ABFA00DDBF2B7 \
  CC68F5A3106FF448322E48ED27F5E38D5B0A215F \
  8FCCA13FEF1D0C2E91008E09770F7A9A5AE15600 \
  C4F0DFFF4E8C1A8236409D08E73BC641CC11F4C8 \
  890C08DB8579162FEE0DF9DB8BEAB4DFCF555EF4 \
  C82FA3AE1CBEDC6BE46B9360C43CEC45C17AB93C \
  108F52B48DB57BB0CC439B2997B01419BD92F80A \
  A363A499291CBBC940DD62E41F10027AF002F8B0 \
  ; do
  gpg --batch --keyserver hkps://keys.openpgp.org --recv-keys "$key" ||
    gpg --batch --keyserver keyserver.ubuntu.com --recv-keys "$key"
done

### Install node

os="$(uname | tr '[:upper:]' '[:lower:]')"
architecture=""
case $(uname -m) in
x86_64) architecture="x64" ;;
arm | aarch64)
  case $os in
  darwin) architecture="arm64" ;;
  linux) dpkg --print-architecture | grep -q "arm64" && architecture="arm64" || architecture="arm7l" ;;
  *)
    echo "Unsupported OS: $os"
    exit 1
    ;;
  esac
  ;;
*)
  echo "Unsupported architecture: $(uname -m)"
  exit 1
  ;;
esac

echo "Detected ${os} OS on ${architecture} architecture"

install_dir="/opt/node/v${NODE_VERSION}"
source_dir=$(mktemp -d)
source_file="node-v${NODE_VERSION}-${os}-${architecture}.tar.xz"
download_url="https://nodejs.org/dist/v${NODE_VERSION}/${source_file}"
shasums_url="https://nodejs.org/dist/v${NODE_VERSION}/SHASUMS256.txt.asc"

function cleanup {
  echo "Cleaning up"
  rm -rf "$source_dir" SHASUMS256.txt.asc
}
trap cleanup EXIT

echo "Creating ${install_dir}"
sudo mkdir -p "$install_dir"
sudo chown ubuntu:ubuntu "$install_dir"
cd "$source_dir"

echo "Fetching and verifying SHASUMS256.txt.asc"
rm -f SHASUMS256.txt.asc
curl --fail-with-body -o SHASUMS256.txt.asc "$shasums_url"
cat SHASUMS256.txt.asc

set +e
gpg --verify SHASUMS256.txt.asc
gpg_exit=$?
set -e
if [[ $gpg_exit != 0 ]]; then
    cat << EOF > "$(mktemp "$MINT_ERRORS/error-XXXX")"
Failed to verify the GPG signature of the Node release file.

Check to see if you are using the latest version of \`mint/install-node\`

You can find the latest version at: https://cloud.rwx.com/leaves
EOF
  exit $gpg_exit
fi

gpgconf --kill dirmngr
gpgconf --kill gpg-agent

echo "Fetching and verifying source file"
curl --fail-with-body -O "$download_url"
grep "$source_file" SHASUMS256.txt.asc | sha256sum -c -

echo "Extract source file to install directory $install_dir"
tar -C "$install_dir" --strip-components=1 -xJf "$source_file"

echo "Add nodejs ${NODE_VERSION} to PATH"
echo "${install_dir}/bin" >>"$MINT_ENV/PATH"

"$install_dir/bin/node" --version

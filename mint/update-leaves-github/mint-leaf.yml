name: mint/update-leaves-github
version: 1.0.0
description: Update Mint leaves for GitHub
source_code_url: https://github.com/rwx-research/mint-leaves/tree/main/mint/update-leaves-github
issue_tracker_url: https://github.com/rwx-research/mint-leaves/issues

parameters:
  rwx-access-token:
    description: "RWX_ACCESS_TOKEN used to authenticate the Mint CLI"
    required: true
  repository:
    description: "GitHub HTTPS repository URL"
    required: true
  ref:
    description: "The ref to check out of the git repository"
    required: true
  github-access-token:
    description: "The GitHub access token to a private app"
    required: true
  allow-major-version-change:
    description: "Allow updating across major versions"
    default: false
  label:
    description: "Label for opened pull requests"
    default: "mint-updates"
  label-color:
    description: "Label color if not yet created"
    default: "298F21"
  mint-file:
    description: "Scope updates to a specific file or files"

tasks:
  - key: install-mint
    call: mint/install-cli 1.0.3

  - key: install-gh
    call: github/install-cli 1.0.0

  - key: code
    call: mint/git-clone 1.1.12
    with:
      repository: ${{ params.repository }}
      ref: ${{ params.ref }}
      github-access-token: ${{ params.github-access-token }}
      preserve-git-dir: true

  - key: update-leaves
    use: [install-mint, install-gh, code]
    cache: false
    run: |
      pr_number="$(gh pr list --author '@me' ${GITHUB_LABEL:+--label "$GITHUB_LABEL"} --json number --jq 'max_by(.number) | .number')"
      if [ -n "$pr_number" ]; then
        printf "$pr_number" > "$MINT_VALUES/existing-pr"
        gh pr checkout "$pr_number"
      else
        touch "$MINT_VALUES/existing-pr"
        branch="mint-update-$MINT_RUN_ID"
        git checkout -b "$branch"
      fi

      mint_args=()
      if [ "$ALLOW_MAJOR_VERSION_CHANGE" = "true" ]; then
        mint_args+=("--allow-major-version-change")
      fi

      if [ -n "$MINT_FILE" ]; then
        mint_args+=("$MINT_FILE")
      fi

      mint leaves update "${mint_args[@]}" 2>&1 | tee "$MINT_VALUES/mint-leaves-update-output"

      if [ -n "$(git status --porcelain)" ]; then
        git add -u
        git commit -F- <<EOF
      Update Mint leaves to the latest version.

      $(cat "$MINT_VALUES/mint-leaves-update-output")
      EOF
        git push -u origin "$(git rev-parse --abbrev-ref HEAD)"
        printf "true" > "$MINT_VALUES/has-changes"
      else
        echo "No changes detected."
        printf "false" > "$MINT_VALUES/has-changes"
      fi
    outputs:
      values:
        - existing-pr
        - has-changes
        - mint-leaves-update-output
    env:
      ALLOW_MAJOR_VERSION_CHANGE: ${{ params.allow-major-version-change }}
      GITHUB_LABEL: ${{ params.label }}
      GITHUB_TOKEN: ${{ params.github-access-token }}
      RWX_ACCESS_TOKEN: ${{ params.rwx-access-token }}
      MINT_FILE: ${{ params.mint-file}}
      MINT_RUN_ID: ${{ mint.run.id }}

  - key: create-or-update-pr
    use: update-leaves
    run: |
      if [ "$HAS_CHANGES" != "true" ]; then
        # Conditional tasks are not supported within a leaf (yet), so this task always runs.
        exit 0
      fi

      if [ -z "$GITHUB_PR_NUMBER" ]; then
        if [ -n "$GITHUB_LABEL" ]; then
          gh label create "$GITHUB_LABEL" --color "$GITHUB_LABEL_COLOR" || true
        fi

        gh pr create --fill ${GITHUB_LABEL:+--label "$GITHUB_LABEL"}
      else
        gh pr comment "$GITHUB_PR_NUMBER" --body "$MINT_LEAVES_UPDATE_OUTPUT"
      fi
    env:
      GITHUB_TOKEN: ${{ params.github-access-token }}
      GITHUB_LABEL: ${{ params.label }}
      GITHUB_LABEL_COLOR: ${{ params.label-color }}
      GITHUB_PR_NUMBER: ${{ tasks.update-leaves.values.existing-pr }}
      HAS_CHANGES: ${{ tasks.update-leaves.values.has-changes }}
      MINT_LEAVES_UPDATE_OUTPUT: ${{ tasks.update-leaves.values.mint-leaves-update-output }}

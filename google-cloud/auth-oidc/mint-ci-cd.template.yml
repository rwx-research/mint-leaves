- key: google-cloud--auth-oidc--install-cli
  call: google-cloud/install-cli 1.0.3

- key: google-cloud--auth-oidc--test--direct-workload
  use: google-cloud--auth-oidc--install-cli
  call: $LEAF_DIGEST
  with:
    oidc-token: ${{ vaults.mint_leaves_google_cloud_auth_testing.oidc.gcp }}
    workload-identity-provider: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
- key: google-cloud--auth-oidc--test--direct-workload--assert
  use: google-cloud--auth-oidc--test--direct-workload
  run: |
    gcloud auth list --filter="status:ACTIVE" --format="value(account)" | \
      grep -q "workloadIdentityPools/${POOL_NAME}/subject"
  env:
    POOL_NAME: mint-sample-identity-pool

- key: google-cloud--auth-oidc--test--service-account
  use: google-cloud--auth-oidc--install-cli
  call: $LEAF_DIGEST
  with:
    oidc-token: ${{ vaults.mint_leaves_google_cloud_auth_testing.oidc.gcp }}
    workload-identity-provider: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
    service-account: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_SERVICE_ACCOUNT }}
- key: google-cloud--auth-oidc--test--service-account--assert
  use: google-cloud--auth-oidc--test--service-account
  run: |
    gcloud auth list --filter="status:ACTIVE" --format="value(account)" | \
      grep -q "$SERVICE_ACCOUNT"

    now=$(date)
    gcloud_auth_describe="$(gcloud auth describe "$SERVICE_ACCOUNT")"

    # gcloud outputs in mm-dd-YYYY HH:MM:SS format, whicha GNU date doesn't understand.
    raw_expiry=$(echo "$gcloud_auth_describe" | grep '^expiry:' | cut -d' ' -f2- | sed -E 's/^([0-9]{2})-([0-9]{2})-([0-9]{4})/\3-\1-\2/')
    expiry=$(date --date="$raw_expiry")
    now_seconds=$(date --date="$now" +%s)
    expiry_seconds=$(date --date="$expiry" +%s)
    lifetime_seconds=$((now_seconds - expiry_seconds))

    echo
    echo "Service account token expires: $expiry"
    echo "Now: $now"
    echo "Token remaining lifetime seconds: $lifetime_seconds"
  env:
    SERVICE_ACCOUNT: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_SERVICE_ACCOUNT }}

- key: google-cloud--auth-oidc--test--service-account-with-lifetime
  use: google-cloud--auth-oidc--install-cli
  call: $LEAF_DIGEST
  with:
    oidc-token: ${{ vaults.mint_leaves_google_cloud_auth_testing.oidc.gcp }}
    workload-identity-provider: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
    service-account: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_SERVICE_ACCOUNT }}
    service-account-token-lifetime-seconds: 63
- key: google-cloud--auth-oidc--test--service-account-with-lifetime--assert
  use: google-cloud--auth-oidc--test--service-account-with-lifetime
  run: |
    expected_lifetime_seconds=63
    echo "Active accounts:"
    gcloud auth list --filter="status:ACTIVE" --format="value(account)" | \
      grep -q "$SERVICE_ACCOUNT"

    now=$(date)
    gcloud_auth_describe="$(gcloud auth describe "$SERVICE_ACCOUNT")"

    if ! grep -q "token_lifetime_seconds:.*${expected_lifetime_seconds}" <<< "$gcloud_auth_describe"; then
      >&2 echo "Unable to find matching token_lifetime_seconds of ${expected_token_lifetime} in active auth config"
      exit 1
    fi

    # gcloud outputs in mm-dd-YYYY HH:MM:SS format, whicha GNU date doesn't understand.
    raw_expiry=$(echo "$gcloud_auth_describe" | grep '^expiry:' | cut -d' ' -f2- | sed -E 's/^([0-9]{2})-([0-9]{2})-([0-9]{4})/\3-\1-\2/')
    expiry=$(date --date="$raw_expiry")
    now_seconds=$(date --date="$now" +%s)
    expiry_seconds=$(date --date="$expiry" +%s)
    lifetime_seconds=$((now_seconds - expiry_seconds))

    echo
    echo "Service account token expires: $expiry"
    echo "Now: $now"
    echo "Token remaining lifetime seconds: $lifetime_seconds"

    if [ "$lifetime_seconds" -gte $(($expected_lifetime_seconds + 5)) ]; then
      >&2 echo "Expected remaining lifetime seconds to be under $(($expected_lifetime_seconds + 5))"
      exit 1
    fi
  env:
    SERVICE_ACCOUNT: ${{ vaults.mint_leaves_google_cloud_auth_testing.secrets.GCP_SERVICE_ACCOUNT }}

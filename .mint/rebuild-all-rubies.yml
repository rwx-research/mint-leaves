tasks:
  - key: install-yq
    run: |
      curl -fLSs -o yq https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64
      sudo install -o root -g root -m 755 yq /usr/local/bin/
      rm yq
  - key: build-manifest
    use: install-yq
    run: |
      yq 'map_values(. | .tag |= to_string)' "${{ run.mint-dir }}/all-ruby-versions.csv" --input-format csv --output-format json > "$MINT_VALUES/parallel-versions"
  - key: build-rubies
    call: ${{ run.mint-dir }}/ruby-binary-builder.yml
    init:
      ruby-version: ${{ parallel.ruby-version }}
      base-os: ${{ parallel.os }}
      base-tag: ${{ parallel.tag }}
      base-arch: ${{ parallel.arch }}
    parallel:
      tasks-limit: 100
      key: ruby-${{ parallel.ruby-version }}-${{ parallel.os }}-${{ parallel.tag }}-${{ parallel.arch }}
      values: ${{ tasks.build-manifest.values.parallel-versions }}
  - key: generate-results
    run: |
      VERSION_KEYS=($(echo '${{ tasks.build-manifest.values.parallel-versions }}' | jq -r '.[] | "\(.["ruby-version"])-\(.os)-\(.tag)-\(.arch)"' | tr -c -s '[:alnum:]\n' '-' | sed 's/x86-64/x86_64/g' ))
      COMMAND=""
      declare -i INDEX=0

      for VERSION_KEY in "${VERSION_KEYS[@]}"
      do
        COMMAND+="
            echo \\\${{ tasks.build-rubies.tasks.ruby-${VERSION_KEY}-${INDEX}.tasks.upload-layer.values.known-ruby }} | tee -a known-rubies.csv"
        INDEX=$((INDEX + 1))
      done

      cat << EOF | tee $MINT_DYNAMIC_TASKS/tasks.yml
        - key: results
          run: |
            touch known-rubies.csv
            $COMMAND
          outputs:
            artifacts:
              - key: known-rubies
                path: known-rubies.csv
      EOF

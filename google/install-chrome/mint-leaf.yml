name: google/install-chrome
version: 2.0.4
description: Install Google Chrome, the official web browser from Google
source_code_url: https://github.com/rwx-research/mint-leaves/tree/main/google/install-chrome
issue_tracker_url: https://github.com/rwx-research/mint-leaves/issues

parameters:
  chrome-version:
    description: "Version of Chrome to install."
    required: true
  install-chromedriver:
    description: "Whether a compatible Chromedriver should be installed."
    required: false
    default: false
  chrome-directory:
    description: "The directory where Chrome will be installed."
    required: false
    default: /opt/chrome
  chromedriver-directory:
    description: "The directory where Chromedriver will be installed."
    required: false
    default: /opt/chromedriver
  add-to-path:
    description: "Whether Chrome and (optionally) Chromedriver should be included in PATH."
    required: false
    default: true

outputs:
  values-from: [install]

tasks:
  - key: resolve-chrome-version
    run: |
      chrome=""

      if [[ "${CHROME_VERSION}" == "stable" || "${CHROME_VERSION}" == "beta" || "${CHROME_VERSION}" == "dev" || "${CHROME_VERSION}" == "canary" ]]; then
        chromes=$(curl -fsSL https://googlechromelabs.github.io/chrome-for-testing/last-known-good-versions-with-downloads.json)
        channel="${CHROME_VERSION^}" # upcase the first letter
        chrome=$(echo "${chromes}" | jq --arg channel "${channel}" '.channels[$channel]')
      else
        chromes=$(curl -fsSL https://googlechromelabs.github.io/chrome-for-testing/known-good-versions-with-downloads.json)

        if [[ "${CHROME_VERSION}" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
          chrome=$(echo "${chromes}" | jq --arg version "${CHROME_VERSION}" '[.versions[] | select(.version == $version)] | last')
        else
          chrome=$(echo "${chromes}" | jq --arg version "${CHROME_VERSION}." '[.versions[] | select(.version | startswith($version))] | last')
        fi
      fi

      if [[ -z "${chrome}" ]]; then
        cat << EOF > $(mktemp "$MINT_ERRORS/error-XXXX")
      The \`chrome-version\` provided does not resolve to a version of Google Chrome known by [Chrome for Testing](https://github.com/GoogleChromeLabs/chrome-for-testing).
      EOF
        exit 1
      fi

      resolved_version=$(echo "$chrome" | jq -r '.version')
      # restrict usage to Chrome >= 115
      if echo "$resolved_version" | awk -F . '{ if ($1 >= 115) { exit 0 } else { exit 1 } }'; then
        echo "${resolved_version}" > "${MINT_VALUES}/chrome-version"
        echo "${chrome}" | jq -r '[.downloads.chrome[] | select(.platform == "linux64")] | last.url' > "${MINT_VALUES}/chrome-download-url"
        echo "${chrome}" | jq -r '[.downloads.chromedriver[] | select(.platform == "linux64")] | last.url' > "${MINT_VALUES}/chromedriver-download-url"
      else
        cat << EOF > $(mktemp "${MINT_ERRORS}/error-XXXX")
      The \`chrome-version\` provided is less than 115. Only versions 115 and higher are supported.
      EOF
        exit 1
      fi
    env:
      CHROME_VERSION: ${{ params.chrome-version }}
    cache: ${{ params.chrome-version =~ '^\d+\.\d+\.\d+\.\d+$' }}

  - key: install
    run: |
      echo "Installing Chrome system dependencies"
      sudo apt-get update
      sudo apt-get install \
        libglib2.0-0 \
        libgconf-2-4 \
        libatk1.0-0 \
        libatk-bridge2.0-0 \
        libgdk-pixbuf2.0-0 \
        libgtk-3-0 \
        libgbm-dev \
        libnss3-dev \
        libxss-dev \
        libasound2 \
        xvfb \
        fonts-liberation \
        libu2f-udev \
        xdg-utils \
        x11-utils
      sudo apt-get clean

      path_additions=""
      echo "${CHROME_VERSION}" > "${MINT_VALUES}/chrome-version"

      echo "Installing Chrome ${CHROME_VERSION}"
      echo

      # Unpack chrome into the chrome directory
      curl -fsSL "${CHROME_DOWNLOAD_URL}" -o chrome.zip
      unzip chrome.zip
      sudo mv chrome-linux64 "${CHROME_DIRECTORY}"

      # Set the correct permissions on the sandbox binary
      chrome_sandbox_binary="${CHROME_DIRECTORY}/chrome_sandbox"
      sudo chown root:root "${chrome_sandbox_binary}"
      sudo chmod 4755 "${chrome_sandbox_binary}"
      echo "${chrome_sandbox_binary}" > "${MINT_ENV}/CHROME_DEVEL_SANDBOX"

      # Store useful chrome values
      chrome_binary="${CHROME_DIRECTORY}/chrome"
      ln -s "${CHROME_DIRECTORY}/chrome" "${CHROME_DIRECTORY}/google-chrome"

      echo "Installed Chrome ${CHROME_VERSION}"
      "${chrome_binary}" --version
      echo

      if [[ "${ADD_TO_PATH}" == "true" ]]; then
        path_additions="${CHROME_DIRECTORY}"
      fi

      if [[ "${INSTALL_CHROMEDRIVER}" == "true" ]]; then
        echo "Installing Chromedriver for Chrome ${CHROME_VERSION}"
        echo

        curl -fsSL "${CHROMEDRIVER_DOWNLOAD_URL}" -o chromedriver.zip
        unzip chromedriver.zip
        sudo mv chromedriver-linux64 "${CHROMEDRIVER_DIRECTORY}"
        chromedriver_binary="${CHROMEDRIVER_DIRECTORY}/chromedriver"

        echo "Installed Chromedriver for Chrome ${CHROME_VERSION}"
        "${chromedriver_binary}" --version
        echo

        if [[ "${ADD_TO_PATH}" == "true" ]]; then
          path_additions="${path_additions}:${CHROMEDRIVER_DIRECTORY}"
        fi
      fi

      if [[ -n "${path_additions}" ]]; then
        echo "Adding ${path_additions} to PATH"
        echo "${path_additions}" >> "${MINT_ENV}/PATH"
      fi

      rm -f chrome.zip
      rm -f chromedriver.zip
    env:
      ADD_TO_PATH: ${{ params.add-to-path }}
      CHROME_DIRECTORY: ${{ params.chrome-directory }}
      CHROME_VERSION: ${{ tasks.resolve-chrome-version.values.chrome-version }}
      CHROME_DOWNLOAD_URL: ${{ tasks.resolve-chrome-version.values.chrome-download-url }}
      CHROMEDRIVER_DIRECTORY: ${{ params.chromedriver-directory }}
      CHROMEDRIVER_DOWNLOAD_URL: ${{ tasks.resolve-chrome-version.values.chromedriver-download-url }}
      INSTALL_CHROMEDRIVER: ${{ params.install-chromedriver }}
